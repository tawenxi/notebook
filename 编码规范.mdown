# 编码规范要求

+ 每个 namespace 命名空间声明语句和 use 声明语句块后面，必须 插入一个空白行。


```
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Http\Requests;
use App\Http\Controllers\Controller;
use App\Acc\Acc;
use App;
```



+ 类的开始花括号（{） 必须 写在函数声明后自成一行，结束花括号（}）也 必须 写在函数主体后自成一行。

+ 方法的开始花括号（{） 必须 写在函数声明后自成一行，结束花括号（}）也 必须 写在函数主体后自成一行。

+ 类的属性和方法 必须 添加访问修饰符（private、protected 以及 public），abstract 以及 final 必须 声明在访问修饰符之前，而 static 必须 声明在访问修饰符之后。

*****
+ 控制结构的关键字后 必须 要有一个空格符，而调用方法或函数时则 一定不可 有。
+ 控制结构的开始花括号（{） 必须 写在声明的同一行，而结束花括号（}） 必须 写在主体后自成一行。
+ 控制结构的开始左括号后和结束右括号前，都 一定不可 有空格符。
*****

```        
if ($a === $b) {   //if后面有一个空格符
            bar();
        } elseif ($a > $b) {
            $foo->bar($arg1);
        } else {
            BazClass::bar($arg2, $arg3);  //函数名后面不可有
        
        }     //ifelse 的结束}自成一行

```

+ 文件规范
 1.所有PHP文件 必须 以一个空白行作为结束。

 2.纯PHP代码文件 必须 省略最后的 ?> 结束标签。

+ 非空行后 一定不可 有多余的空格符。
+ 缩进要求：代码 必须 使用4个空格符的缩进，**一定不可 用 tab键**
+ 2.5. 关键字 以及 True/False/Null#

+ PHP所有 关键字 必须 全部小写。

+ 常量 true 、false 和 null 也 必须 全部小写。

3. namespace 以及 use 声明#

```
namespace 声明后 必须 插入一个空白行。

所有 use 必须 在 namespace 后声明。

每条 use 声明语句 必须 只有一个 use 关键词。

use 声明语句块后 必须 要有一个空白行。
```

```
<?php
namespace Vendor\Package;

use FooClass;
use BarClass as Bar;
use OtherVendor\OtherPackage\BazClass;
```

+ 类的开始花括号 必须 独占一行，结束花括号也 必须 在类主体后独占一行。
```
class ClassName extends ParentClass implements \ArrayAccess, \Countable
{
    // 这里面是常量、属性、类方法
}
```

+ implements 的继承列表也 可以 分成多行，这样的话，每个继承接口名称都 必须 分开独立成行，包括第一个。

```
<?php
namespace Vendor\Package;

use FooClass;
use BarClass as Bar;
use OtherVendor\OtherPackage\BazClass;

class ClassName extends ParentClass implements
    \ArrayAccess,
    \Countable,
    \Serializable
{
    // 这里面是常量、属性、类方法
}

```

+方法#

1. 所有方法都 必须 添加访问修饰符。

2. 不该 使用下划线作为前缀，来区分方法是 protected 或 private。

3. 方法名称后 一定不可 有空格符，其开始花括号 必须 独占一行，结束花括号也 必须 在方法主体后单独成一行。参数左括号后和右括号前 一定不可 有空格。

```
<?php
namespace Vendor\Package;

class ClassName
{
    public function fooBarBaz($arg1, &$arg2, $arg3 = [])
    {
        // method body
    }
}
```

4. 方法的参数

参数列表中，每个逗号后面 必须 要有一个空格，而逗号前面 一定不可 有空格。



5. 参数列表 可以 分列成多行，这样，包括第一个参数在内的每个参数都 必须 单独成行。拆分成多行的参数列表后，结束括号以及方法开始花括号 必须 写在同一行，中间用一个空格分隔。

```
class ClassName
{
    public function aVeryLongMethodName(
        ClassTypeHint $arg1,
        &$arg2,
        array $arg3 = []
    ) {
        // 方法的内容
    }
}

```

+ 参数列表 可以 分列成多行，这样，包括第一个参数在内的每个参数都 必须 单独成行。

+ 拆分成多行的参数列表后，结束括号以及方法开始花括号 必须 写在同一行，中间用一个空格分隔。

+ if 、elseif 和 else #

+ 标准的 if 结构如下代码所示，请留意「括号」、「空格」以及「花括号」的位置， 注意 else 和 elseif 都与前面的结束花括号在同一行。

```
<?php
if ($expr1) {
    // if body
} elseif ($expr2) {
    // elseif body
} else {
    // else body;
}
```

+ 应该 使用关键词 elseif 代替所有 else if以使得所有的控制关键字都像是单独的一个词。 
********







